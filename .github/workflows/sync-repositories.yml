name: Sync Repositories

on:
  push:
    branches: [ main, develop, gitea-setup ]
  pull_request:
    branches: [ main ]

jobs:
  sync-to-gitea:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"

    - name: Add Gitea remote
      run: |
        git remote add gitea ${{ secrets.GITEA_REPO_URL }} || true
        git remote set-url gitea ${{ secrets.GITEA_REPO_URL }}

    - name: Push to Gitea
      run: |
        git push gitea ${{ github.ref_name }} --force-with-lease
      env:
        GIT_ASKPASS: echo
        GIT_USERNAME: ${{ secrets.GITEA_USERNAME }}
        GIT_PASSWORD: ${{ secrets.GITEA_TOKEN }}

  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          app/rust-api/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check Rust formatting
      run: |
        cd app/rust-api
        cargo fmt --all -- --check

    - name: Run Clippy
      run: |
        cd app/rust-api
        cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: |
        cd app/rust-api
        cargo test --verbose

    - name: Build Docker image
      run: |
        cd app/rust-api
        docker build -t rust-api:${{ github.sha }} .

  deploy-notification:
    runs-on: ubuntu-latest
    needs: [sync-to-gitea, build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Notify deployment
      run: |
        echo "ðŸš€ Successfully synced to Gitea and passed all checks"
        echo "ðŸ“¦ Ready for deployment to Kubernetes cluster"
        echo "ðŸ”— Gitea PR: Check your local Gitea instance"
        echo "ðŸ”— GitHub PR: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
